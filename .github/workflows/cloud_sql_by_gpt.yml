# Query Google Cloud SQL (PostgreSQL), base source created by ChatGPT
# 
# https://github.com/mattes/gce-cloudsql-proxy-action
# https://github.com/marketplace/actions/google-cloud-sql-proxy-action
#
# github actions - run sql script in postgres service
# https://stackoverflow.com/questions/63168549/github-actions-run-sql-script-in-postgres-service
# This is the Cloud SQL Proxy v1. It is no longer receiving active feature development. 
# For the latest features and improvements, migrate to the v2 version of the Cloud SQL Proxy. 
# For details, see: https://github.com/GoogleCloudPlatform/cloud-sql-proxy/blob/main/migration-guide.md
#
# Cloud SQL 인증 프록시 다운로드 및 설치
# https://cloud.google.com/sql/docs/mysql/sql-proxy?hl=ko#install
# wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
# chmod +x cloud_sql_proxy

name: Google Cloud SQL by ChatGPT

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

env:
  PG_INSTANCE: "tpcg-datacollector:us-central1:posco-news-tmp"
  PG_HOST: "34.121.185.166"
  PG_LOCALHOST: "127.0.0.1"
  PG_PORT: "5432"
  PG_USER: "tpcg"
  PG_PWD: "root"
  PG_DB: "news-tmp"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 0. Authentication
    - name: Authenticate with GCP using Service Account
      uses: 'google-github-actions/auth@v2'
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}
        credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
  
    # 1. Google Cloud SDK 설치 및 인증
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        version: '428.0.0'
        service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        
    - name: Authenticate with gcloud
      run: |
        echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" > "${HOME}/gcloud-service-key.json"
        #gcloud auth activate-service-account --key-file="${HOME}/gcloud-service-key.json"
        gcloud auth activate-service-account --key-file=${{ env.GOOGLE_APPLICATION_CREDENTIALS }}

    - name: Start Cloud SQL Auth Proxy
      run: |
        curl -o cloud-sql-proxy https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.14.1/cloud-sql-proxy.linux.amd64
        chmod +x cloud-sql-proxy
        #./cloud-sql-proxy -instances=${{ env.PG_INSTANCE }}=tcp:5432 &
        ./cloud-sql-proxy --address 0.0.0.0 --port=5432 ${{ env.PG_INSTANCE }} &
        sleep 5

    # 2. PostgreSQL 클라이언트 설치
    - name: Install PostgreSQL Client
      run: sudo apt-get install -y postgresql-client

    # 3. SELECT 쿼리 실행
    - name: Run SELECT query
      env:
        #DB_HOST: ${{ env.PG_HOST }}
        #DB_HOST: ${{ env.PG_LOCALHOST }}
        DB_HOST: 127.0.0.1
        DB_USER: ${{ env.PG_USER }}
        DB_PASSWORD: ${{ env.PG_PWD }}
        DB_NAME: ${{ env.PG_DB }}
      run: |
        PGPASSWORD="$DB_PASSWORD" psql -h $DB_HOST -U $DB_USER -d $DB_NAME -c "SELECT * FROM tb_newscontent WHERE cast(writedate as date) = '2024-03-12' AND process_status=0 AND (title_eng is null or title_kor is null) LIMIT 5;"
